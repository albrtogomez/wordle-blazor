@inject GameManagerService GameManager

<div class="board">

    @for (int i = 0; i < GameManagerService.RowSize; i++)
    {
        @for (int j = 0; j < GameManagerService.ColumnSize; j++)
        {
            <div class="board-box @GetBoardCellStateCssClass(GameManager.BoardGrid[i, j].State)">
                @GameManager.BoardGrid[i, j].Value
            </div>
        }
    }

</div>

<CascadingValue Value="this">
    <CascadingValue Value="GameManager">
        <Keyboard/>
    </CascadingValue>
</CascadingValue>

@code {
    protected override async Task OnInitializedAsync()
    {
        await GameManager.LoadJsonSpanishDictionary();
        GameManager.StartGame();
    }

    public string GetBoardCellStateCssClass(BoardCellState state)
    {
        switch (state)
        {
            case BoardCellState.Typing:
                return "board-typing-letter";
            case BoardCellState.Correct:
                return "board-correct-letter";
            case BoardCellState.IncorrectPosition:
                return "board-incorrectposition-letter";
            case BoardCellState.Wrong:
                return "board-wrong-letter";
            case BoardCellState.Empty:
            default:
                return "";
        }
    }

    public void NotifyChange()
    {
        InvokeAsync(StateHasChanged);
    }
}
